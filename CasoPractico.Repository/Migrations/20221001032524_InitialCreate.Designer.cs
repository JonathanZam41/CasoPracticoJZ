// <auto-generated />
using System;
using CasoPractico.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CasoPractico.Repository.Migrations
{
    [DbContext(typeof(TransactionsDbContext))]
    [Migration("20221001032524_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("CasoPractico.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ACC_ID")
                        .HasColumnOrder(0)
                        .HasComment("Id de la cuenta");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_CREATED_BY")
                        .HasColumnOrder(4)
                        .HasComment("Usuario que creo el registro");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_CREATED_ON")
                        .HasColumnOrder(5)
                        .HasComment("Fecha de creacion del registro");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_INITIAL_BALANCE")
                        .HasColumnOrder(3)
                        .HasComment("Saldo inicial");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_NUMBER")
                        .HasColumnOrder(1)
                        .HasComment("Numero de cuenta");

                    b.Property<ushort>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ACC_STATUS")
                        .HasColumnOrder(8)
                        .HasComment("Estado de la cuenta");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_TYPE")
                        .HasColumnOrder(2)
                        .HasComment("Tipo de cuenta");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_UPDATED_BY")
                        .HasColumnOrder(6)
                        .HasComment("Usuario que actualizo el registro");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_UPDATED_ON")
                        .HasColumnOrder(7)
                        .HasComment("Fecha de actualizacion del registro");

                    b.HasKey("Id");

                    b.ToTable("ACCOUNT", (string)null);
                });

            modelBuilder.Entity("CasoPractico.Domain.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CLI_ID")
                        .HasColumnOrder(0)
                        .HasComment("Id de Cliente");

                    b.Property<int>("Address")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_CREATED_BY")
                        .HasColumnOrder(2)
                        .HasComment("Usuario que creo el registro");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_CREATED_ON")
                        .HasColumnOrder(3)
                        .HasComment("Fecha de creacion del registro");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_PASSWORD")
                        .HasColumnOrder(1)
                        .HasComment("Contrasenia del cliente");

                    b.Property<int>("Phone")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CLI_STATUS")
                        .HasColumnOrder(6)
                        .HasComment("Estado del cliente");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_UPDATED_BY")
                        .HasColumnOrder(4)
                        .HasComment("Usuario que actualizo el registro");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_UPDATED_ON")
                        .HasColumnOrder(5)
                        .HasComment("Fecha de actualizacion del registro");

                    b.HasKey("Id");

                    b.ToTable("CLIENT", (string)null);
                });

            modelBuilder.Entity("CasoPractico.Domain.Moviment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("MOV_ID")
                        .HasColumnOrder(0)
                        .HasComment("Id de movimiento");

                    b.Property<decimal>("Balance")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_BALANCE")
                        .HasColumnOrder(4)
                        .HasComment("Saldo restante");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_CREATED_BY")
                        .HasColumnOrder(5)
                        .HasComment("Usuario que creo el registro");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_CREATED_ON")
                        .HasColumnOrder(6)
                        .HasComment("Fecha de creacion del registro");

                    b.Property<DateTime>("Date")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_DATE")
                        .HasColumnOrder(1)
                        .HasComment("Fecha de movimiento");

                    b.Property<ushort>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_TYPE")
                        .HasColumnOrder(2)
                        .HasComment("Tipo de movimiento");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_UPDATED_BY")
                        .HasColumnOrder(7)
                        .HasComment("Usuario que actualizo el registro");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_UPDATED_ON")
                        .HasColumnOrder(8)
                        .HasComment("Fecha de actualizacion del registro");

                    b.Property<decimal>("Value")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_VALUE")
                        .HasColumnOrder(3)
                        .HasComment("Valor de movimiento");

                    b.HasKey("Id");

                    b.ToTable("MOVIMENT", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
