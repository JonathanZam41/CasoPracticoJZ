// <auto-generated />
using System;
using CasoPractico.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CasoPractico.Repository.Migrations
{
    [DbContext(typeof(TransactionsDbContext))]
    partial class TransactionsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("CasoPractico.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ACC_ID")
                        .HasColumnOrder(0)
                        .HasComment("Id de la cuenta");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_CREATED_BY")
                        .HasColumnOrder(4)
                        .HasComment("Usuario que creo el registro");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_CREATED_ON")
                        .HasColumnOrder(5)
                        .HasComment("Fecha de creacion del registro");

                    b.Property<int>("IdClient")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ACC_CLIENT_ID")
                        .HasColumnOrder(9)
                        .HasComment("Id de cliente");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_INITIAL_BALANCE")
                        .HasColumnOrder(3)
                        .HasComment("Saldo inicial");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_NUMBER")
                        .HasColumnOrder(1)
                        .HasComment("Numero de cuenta");

                    b.Property<ushort>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ACC_STATUS")
                        .HasColumnOrder(8)
                        .HasComment("Estado de la cuenta");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_TYPE")
                        .HasColumnOrder(2)
                        .HasComment("Tipo de cuenta");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_UPDATED_BY")
                        .HasColumnOrder(6)
                        .HasComment("Usuario que actualizo el registro");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("ACC_UPDATED_ON")
                        .HasColumnOrder(7)
                        .HasComment("Fecha de actualizacion del registro");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.ToTable("ACCOUNT", (string)null);
                });

            modelBuilder.Entity("CasoPractico.Domain.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CLI_ID")
                        .HasColumnOrder(0)
                        .HasComment("Id de Cliente");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_ADDRESS")
                        .HasColumnOrder(5)
                        .HasComment("Direccion de Cliente");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CLI_AGE")
                        .HasColumnOrder(3)
                        .HasComment("Edad de Cliente");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_CREATED_BY")
                        .HasColumnOrder(7)
                        .HasComment("Usuario que creo el registro");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_CREATED_ON")
                        .HasColumnOrder(8)
                        .HasComment("Fecha de creacion del registro");

                    b.Property<int?>("Gender")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CLI_GENDER")
                        .HasColumnOrder(2)
                        .HasComment("Genero de Cliente");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_IDENTIFICATION")
                        .HasColumnOrder(4)
                        .HasComment("Identificacion de Cliente");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_NAME")
                        .HasColumnOrder(1)
                        .HasComment("Nombre de Cliente");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_PHONE")
                        .HasColumnOrder(6)
                        .HasComment("Telefono del cliente");

                    b.Property<ushort>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CLI_STATUS")
                        .HasColumnOrder(11)
                        .HasComment("Estado del cliente");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_UPDATED_BY")
                        .HasColumnOrder(9)
                        .HasComment("Usuario que actualizo el registro");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLI_UPDATED_ON")
                        .HasColumnOrder(10)
                        .HasComment("Fecha de actualizacion del registro");

                    b.HasKey("Id");

                    b.ToTable("CLIENT", (string)null);
                });

            modelBuilder.Entity("CasoPractico.Domain.Moviment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("MOV_ID")
                        .HasColumnOrder(0)
                        .HasComment("Id de movimiento");

                    b.Property<decimal>("Balance")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_BALANCE")
                        .HasColumnOrder(4)
                        .HasComment("Saldo restante");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_CREATED_BY")
                        .HasColumnOrder(5)
                        .HasComment("Usuario que creo el registro");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_CREATED_ON")
                        .HasColumnOrder(6)
                        .HasComment("Fecha de creacion del registro");

                    b.Property<DateTime>("Date")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_DATE")
                        .HasColumnOrder(1)
                        .HasComment("Fecha de movimiento");

                    b.Property<int>("IdAccount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MOV_ACCOUNT_ID")
                        .HasColumnOrder(9)
                        .HasComment("Id de cuenta");

                    b.Property<ushort>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_TYPE")
                        .HasColumnOrder(2)
                        .HasComment("Tipo de movimiento");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_UPDATED_BY")
                        .HasColumnOrder(7)
                        .HasComment("Usuario que actualizo el registro");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_UPDATED_ON")
                        .HasColumnOrder(8)
                        .HasComment("Fecha de actualizacion del registro");

                    b.Property<decimal>("Value")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOV_VALUE")
                        .HasColumnOrder(3)
                        .HasComment("Valor de movimiento");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdAccount" }, "IDX_UNIQUE_TIP_ID_CLI_ID_NUMBER")
                        .IsUnique();

                    b.ToTable("MOVIMENT", (string)null);
                });

            modelBuilder.Entity("CasoPractico.Domain.Account", b =>
                {
                    b.HasOne("CasoPractico.Domain.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_ACC_CLIENT_ID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CasoPractico.Domain.Moviment", b =>
                {
                    b.HasOne("CasoPractico.Domain.Account", "Account")
                        .WithMany("Moviments")
                        .HasForeignKey("IdAccount")
                        .IsRequired()
                        .HasConstraintName("FK_MOV_ACCOUNT_ID");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CasoPractico.Domain.Account", b =>
                {
                    b.Navigation("Moviments");
                });

            modelBuilder.Entity("CasoPractico.Domain.Client", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
